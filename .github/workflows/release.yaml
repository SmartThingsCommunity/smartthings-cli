name: Release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    # don't run on forks
    if: ${{ github.repository_owner == 'SmartThingsCommunity' }}

    name: Release

    runs-on: ubuntu-latest

    outputs:
      cli-released: ${{ steps.cli-release.outputs.published }}
      cli-version: ${{ steps.cli-metadata.outputs.version }}
      cli-tag: ${{ steps.cli-metadata.outputs.tag }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run version
          publish: npm run release
          commit: "chore(changesets): version packages"
          title: "chore(changesets): version packages"
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # decouple Github Release from library-only publishing
      - name: Check if CLI Published
        id: cli-release
        run: echo "::set-output name=published::$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq 'any(.name == "@smartthings/cli")')"

      - name: Derive Required Metadata
        id: cli-metadata
        if: steps.cli-release.outputs.published == 'true'
        run: | # derive latest info from changesets output
          PUBLISHED_PACKAGE=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq 'map(select(.name == "@smartthings/cli")) | .[]')
          echo "::set-output name=tag::$(echo $PUBLISHED_PACKAGE | jq --raw-output '.name + "@" + .version')"
          echo "::set-output name=version::$(echo $PUBLISHED_PACKAGE | jq --raw-output '.version')"

      - name: Package CLI
        id: cli-package
        if: steps.cli-metadata.outcome == 'success'
        run: pwd && ls -l . packages/cli packages/cli/lib && echo 'packaging' && npm run package && echo 'done packaging' && pwd && ls -l . packages/cli packages/cli/lib packages/cli/dist_bin

      # hack since Github auto generated notes aren't working right now
      - name: Generate Github Release Notes
        if: steps.cli-package.outcome == 'success'
        run: node generate-release-notes.mjs ${{ steps.cli-metadata.outputs.version }}

      - name: Create Github Release
        id: gh-release
        if: steps.cli-package.outcome == 'success'
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.cli-metadata.outputs.version }}
          body_path: ${{ github.workspace }}/RELEASE_NOTES.txt
          tag_name: ${{ steps.cli-metadata.outputs.tag }}
          prerelease: true
          files: packages/cli/dist_bin/assets/*

      - name: Upload .exe Artifact
        if: steps.cli-package.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: windows-exe
          path: packages/cli/dist_bin/win/smartthings.exe

  homebrew-formula:
    needs: release

    if: needs.release.outputs.cli-released == 'true'

    name: Bump Homebrew Formula

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure Git Identity
      uses: Homebrew/actions/git-user-config@master
      with:
        username: smartthingspi

    - name: Tap Formula Repo
      run: brew tap smartthingscommunity/smartthings

    - name: Bump Formula
      uses: Homebrew/actions/bump-formulae@master
      with:
        token: ${{ secrets.HOMEBREW_COMMITTER_TOKEN }}
        formulae: smartthingscommunity/smartthings/smartthings

  windows-installer:
    needs: release

    if: needs.release.outputs.cli-released == 'true'

    name: Release Windows Installer

    # ensure WiX Toolset is installed on image before updating runner
    # ex: https://github.com/actions/virtual-environments/blob/b87bdfb146bdd41a98f33fc9572a961e9a60e9dd/images/win/Windows2022-Readme.md
    runs-on: windows-2022

    steps:
      # remove any pre-release labels since WiX doesn't support them
      - name: Sanitize CLI Version String
        id: safe-semver
        run: echo "::set-output name=version::$('${{ needs.release.outputs.cli-version }}'.Split('-') | Select-Object -Index 0)"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download .exe Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-exe
          path: packages\cli\wix

      # https://github.community/t/set-path-for-wix-toolset-in-windows-runner/154708/2
      # https://stackoverflow.com/a/71579543
      - name: Add WiX Toolset to Path
        run: Add-Content $env:GITHUB_PATH "C:\Program Files (x86)\WiX Toolset v3.11\bin"

      - name: Compile WiX file
        run: candle.exe smartthings.wxs -ext WixUIExtension
        working-directory: packages\cli\wix
        env:
          SMARTTHINGS_SEMVER: ${{ steps.safe-semver.outputs.version }}
          # must be absolute path or relative to .wxs file
          SMARTTHINGS_BINARY_PATH: .\smartthings.exe

      - name: Build .msi
        run: light.exe -out smartthings.msi smartthings.wixobj -ext WixUIExtension
        working-directory: packages\cli\wix

      - name: Add .msi Artifact to Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release.outputs.cli-tag }}
          files: packages\cli\wix\smartthings.msi
