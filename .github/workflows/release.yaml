name: Release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    # don't run on forks
    if: ${{ github.repository_owner == 'SmartThingsCommunity' }}

    name: Release

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run version
          publish: npm run release
          commit: "chore(changesets): version packages"
          title: "chore(changesets): version packages"
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # decouple Github Release from library-only publishing
      - name: Check if CLI Published
        id: cli-release
        run: echo "::set-output name=published::$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq 'any(.name == "@smartthings/cli")')"

      - name: Derive Required Metadata
        id: cli-metadata
        if: steps.cli-release.outputs.published == 'true'
        run: | # derive latest info from changesets output
          PUBLISHED_PACKAGE=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq 'map(select(.name == "@smartthings/cli")) | .[]')
          echo "::set-output name=tag::$(echo $PUBLISHED_PACKAGE | jq --raw-output '.name + "@" + .version')"
          echo "::set-output name=version::$(echo $PUBLISHED_PACKAGE | jq --raw-output '.version')"

      - name: Package CLI
        id: cli-package
        if: steps.cli-metadata.outcome == 'success'
        run: pwd && ls -l . packages/cli packages/cli/lib && echo 'packaging' && npm run package && echo 'done packaging' && pwd && ls -l . packages/cli packages/cli/lib packages/cli/dist_bin

      # hack since Github auto generated notes aren't working right now
      - name: Generate Github Release Notes
        if: steps.cli-package.outcome == 'success'
        run: node generate-release-notes.mjs ${{ steps.cli-metadata.outputs.version }}

      - name: Create Github Release
        id: gh-release
        if: steps.cli-package.outcome == 'success'
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.cli-metadata.outputs.version }}
          body_path: ${{ github.workspace }}/RELEASE_NOTES.txt
          tag_name: ${{ steps.cli-metadata.outputs.tag }}
          prerelease: true
          files: packages/cli/dist_bin/assets/*

      - name: Bump Homebrew Formula
        if: steps.gh-release.outcome == 'success'
        uses: mislav/bump-homebrew-formula-action@v2
        with:
          formula-name: smartthings
          tag-name: ${{ steps.cli-metadata.outputs.tag }}
          download-url: https://github.com/SmartThingsCommunity/smartthings-cli/releases/download/${{ steps.cli-metadata.outputs.tag }}/smartthings-macos.tar.gz
          homebrew-tap: SmartThingsCommunity/homebrew-smartthings
          commit-message: |
            chore: bump {{formulaName}} {{version}}

            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_COMMITTER_TOKEN }}
